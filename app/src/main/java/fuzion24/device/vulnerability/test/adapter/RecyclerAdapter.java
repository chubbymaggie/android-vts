package fuzion24.device.vulnerability.test.adapter;

import android.content.Context;
import android.framework.libcore.io.Streams;
import android.graphics.Color;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.nowsecure.android.vts.R;

import java.util.List;

import fuzion24.device.vulnerability.test.VulnerabilityTestResult;
import fuzion24.device.vulnerability.test.adapter.viewholder.RecyclerItemViewHolder;

public class RecyclerAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {

    private List<VulnerabilityTestResult> mResults;
    private Context context;

    public RecyclerAdapter(Context context, List<VulnerabilityTestResult> itemList) {
        this.context = context;
        this.mResults = itemList;
    }

    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        Context context = parent.getContext();
        View view = LayoutInflater.from(context).inflate(R.layout.vulnerability_layout, parent, false);

        return RecyclerItemViewHolder.newInstance(view);
    }

    @Override
    public void onBindViewHolder(RecyclerView.ViewHolder viewHolder, int position) {
        RecyclerItemViewHolder holder = (RecyclerItemViewHolder) viewHolder;
        VulnerabilityTestResult item = mResults.get(position);

        holder.setItemTestName(item.getName());

        if (item.getException() != null) {
            holder.setItemTestResult(context.getString(R.string.error_test, item.getException().getMessage()));
        } else {
            holder.setItemTestResult(context.getString(R.string.test_result, item.getResult() ? context.getString(R.string.test_result_failure) : context.getString(R.string.test_result_success)));

            if (item.getResult()) {
                holder.setItemTestResultColor(Color.RED);
            } else {
                holder.setItemTestResultColor(Color.GREEN);
            }

        }
    }

    @Override
    public int getItemCount() {
        return mResults == null ? 0 : mResults.size();
    }

}
